<Activity mc:Ignorable="sap sap2010" x:Class="ExtractTransactionsProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FechaFinal" Type="InArgument(x:String)" />
    <x:Property Name="in_FechaInicio" Type="InArgument(x:String)" />
    <x:Property Name="in_RunType" Type="InArgument(x:String)" />
    <x:Property Name="in_out_ReporteConfig" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1214.66666666667,16410.6666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExtractTransactionsProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="43">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExtractTransactionsProcess" sap:VirtualizedContainerService.HintSize="1224.66666666667,16346" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="DownloadsPath" />
      <Variable x:TypeArguments="x:String" Name="ConfigExcelFile" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReporteConfigDT" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheetsList" />
      <Variable x:TypeArguments="sd:DataTable" Name="FinalAccountsDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT1" />
      <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT2" />
      <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT3" />
      <Variable x:TypeArguments="x:String" Name="MovimientosBancariosFile" />
      <Variable x:TypeArguments="s:String[]" Name="LastBanksArray" />
      <Variable x:TypeArguments="s:String[]" Name="LastSociedadesArray" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
      <Variable x:TypeArguments="x:String" Name="toOutputEmail" />
      <Variable x:TypeArguments="s:String[]" Name="ToEmailsList" />
      <Variable x:TypeArguments="s:String[]" Name="AttachmentsList" />
      <Variable x:TypeArguments="ss:SecureString" Name="ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="clientID" />
      <Variable x:TypeArguments="x:String" Name="StringDate" />
      <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
      <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT4" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;** Comienza el proceso de Extraccion Bancaria **&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;ExtractTransactionProcess Tipo de Corrida: &quot;+in_RunType]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Se cierra Google Chrome...&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1182.66666666667,373.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Chrome" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Assign sap2010:Annotation.AnnotationText="Obtener el Path en el que se gauardasn los archivos descargados." DisplayName="Get DownloadPath" sap:VirtualizedContainerService.HintSize="1182.66666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[DownloadsPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)+"\Downloads"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Se limpian las carpetas ...&quot;]" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de descargas para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1182.66666666667,346" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(DownloadsPath, &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,172.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="1182.66666666667,90.6666666666667" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="MovimientosBancarios" PathType="Folder" />
    <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="1182.66666666667,275.333333333333" sap2010:WorkflowViewState.IdRef="If_138">
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="MovimientosBancarios" />
      </If.Then>
    </If>
    <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="1182.66666666667,833.333333333333" sap2010:WorkflowViewState.IdRef="If_157">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,178.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_82">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadRange AddHeaders="True" DataTable="[ReporteConfigDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_6" Range="A1" SheetName="RegistroBot" WorkbookPath="[in_out_ReporteConfig]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="476,669.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_84">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de Movimientos Bancarios para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="434,346" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,172.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_83">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[file.ToString]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:BuildDataTable DataTable="[ReporteConfigDT]" DisplayName="Build Data Table Reporte" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Empresa&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Banco&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Cuenta_x0020_en_x0020_Quickbooks&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Cuenta_x0020_en_x0020_el_x0020_Banco&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Movimientos_x0020_Obtenidos&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Actualizacion_x0020_en_x0020_SAP&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Comentarios&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del Excel Report." sap:VirtualizedContainerService.HintSize="434,92.6666666666667" sap2010:WorkflowViewState.IdRef="Assign_139">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_out_ReporteConfig]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["ReporteBot_" + Date.Now.ToString("dd_MM_yyyy_hh-mm-ss") + ".xlsx"]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <Assign sap2010:Annotation.AnnotationText="La direccion en la cual se encuentra el archivo de Configuracion que contiene todas las cuentas." sap:VirtualizedContainerService.HintSize="1182.66666666667,124" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ConfigExcelFile]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">ExcelDeConfiguracion\ExcelConfigCuentas.xlsx</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Se le asigna a una variable llamada &quot;ExcelSheetsList&quot; con el nombre de todas las empresas que se manejan en el proceso.&#xA;" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1182.66666666667,284.666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[ConfigExcelFile]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[ExcelSheetsList]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:BuildDataTable DataTable="[FinalAccountsDT]" DisplayName="Build Final Accounts Data Table" sap:VirtualizedContainerService.HintSize="1182.66666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Sociedad&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Banco&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Link&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Cuenta_x0020_en_x0020_Quickbooks&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Cuenta_x0020_en_x0020_el_x0020_Banco&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Descargar&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1182.66666666667,814.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ExcelSheetsList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="EntidadSheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="452,686.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se lee toda la tabla de confirguracion que contiene toda la informacion necesaria para realizar el proceso completo a cada una de las cuentas del proceso." DataTable="[AccountsDT]" DisplayName="Read Accounts DataTable" sap:VirtualizedContainerService.HintSize="410,148.666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_3" Range="A1" SheetName="[EntidadSheet.ToString]" WorkbookPath="[ConfigExcelFile]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadRange>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[AccountsDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="410,406" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,282" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{EntidadSheet.ToString.ToUpper, row(0).ToString, row(1).ToString, row(2).ToString, row(3).ToString, row(4).ToString}]" DataTable="[FinalAccountsDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,190" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="Sociedad" DataTable="[FinalAccountsDT]" DisplayName="Sort column &quot;Sociedad&quot;" sap:VirtualizedContainerService.HintSize="1182.66666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="SortDataTable_5" Order="Ascending" OutputDataTable="[FinalAccountsDT]" SortOrder="Ascending" />
    <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="Banco" DataTable="[FinalAccountsDT]" DisplayName="Sort column &quot;Banco&quot;" sap:VirtualizedContainerService.HintSize="1182.66666666667,244.666666666667" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Ascending" OutputDataTable="[FinalAccountsDT]" SortOrder="Ascending" />
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del los bancos anteriores, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1182.66666666667,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_78">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[LastBanksArray]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[{"", "", ""}]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre de las Sociedades anteriores, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1182.66666666667,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_79">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[LastSociedadesArray]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[{"null", "null", "null"}]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Empieza el proceso de extraccion&quot;]" />
    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que no tienen ningun valor en alguna de las columnas." DataTable="[FinalAccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1182.66666666667,224.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[FinalAccountsDT]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Link"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Cuenta en Quickbooks"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Cuenta en el Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FilterDataTable>
    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que tienen como valor &quot;NO&quot; en la columna &quot;Descargar&quot;." DataTable="[FinalAccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1182.66666666667,224.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[FinalAccountsDT]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["NO"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FilterDataTable>
    <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1182.66666666667,176.666666666667" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos1.xlsx">
      <ui:WriteCell.Text>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:WriteCell.Text>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCell>
    <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1182.66666666667,176.666666666667" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos2.xlsx">
      <ui:WriteCell.Text>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:WriteCell.Text>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCell>
    <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1182.66666666667,176.666666666667" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos3.xlsx">
      <ui:WriteCell.Text>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:WriteCell.Text>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteCell>
    <ui:FilterDataTable DataTable="[FinalAccountsDT]" DisplayName="Filter Data Table 1" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1182.66666666667,162.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[AccountsDT1]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["BN"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["BCT"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["BAC"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[FinalAccountsDT]" DisplayName="Filter Data Table 2" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1182.66666666667,162.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[AccountsDT2]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["LAFISE"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["PROMERICA"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["DAVIVIENDA"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[FinalAccountsDT]" DisplayName="Filter Data Table 3" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1182.66666666667,162.666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_10" OutputDataTable="[AccountsDT3]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["IMPROBANK"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1182.66666666667,5114.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_4">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="720,4876.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_87">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Parallel sap:VirtualizedContainerService.HintSize="678,194" sap2010:WorkflowViewState.IdRef="Parallel_2">
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT1]" DisplayName="For Each Account 1" sap:VirtualizedContainerService.HintSize="200,148" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body For Each Account 1" sap:VirtualizedContainerService.HintSize="956.666666666667,5004" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                      <Variable x:TypeArguments="x:String" Name="Comentarios" />
                      <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                      <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                      <Variable x:TypeArguments="x:Boolean" Name="PerfilChanged" />
                      <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_96">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_44">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="914.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_81">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(1).ToString.Equals(LastBanksArray(0))]" sap:VirtualizedContainerService.HintSize="914.666666666667,869.333333333333" sap2010:WorkflowViewState.IdRef="If_55">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="508.666666666667,610" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="466.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_46">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="466.666666666667,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(0)]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="466.666666666667,216.666666666667" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[row(2).ToString]">
                            <ui:OpenBrowser.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                </Sequence>
                              </ActivityAction>
                            </ui:OpenBrowser.Body>
                          </ui:OpenBrowser>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If sap2010:Annotation.AnnotationText="Se verifica si es la primera corrida del ciclo, para ello se utiliza el valor predefinido anteriormente." Condition="[NOT LastSociedadesArray(0).Equals(&quot;null&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,615.333333333333" sap2010:WorkflowViewState.IdRef="If_112">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[LastBanksArray(0).Equals(row(1).ToString)]" sap:VirtualizedContainerService.HintSize="878,390" sap2010:WorkflowViewState.IdRef="If_154">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[LastSociedadesArray(0).Equals(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="570,226" sap2010:WorkflowViewState.IdRef="If_109">
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_82">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_80">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_134">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_133">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBanksArray(0)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(1).ToString]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(1).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,131.333333333333" sap2010:WorkflowViewState.IdRef="If_64">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(1).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="3336,1516" sap2010:WorkflowViewState.IdRef="If_63">
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(1).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1358" sap2010:WorkflowViewState.IdRef="If_62">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(1).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1200" sap2010:WorkflowViewState.IdRef="If_61">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(1).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1042" sap2010:WorkflowViewState.IdRef="If_60">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(1).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1820,884" sap2010:WorkflowViewState.IdRef="If_59">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(1).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1441,726" sap2010:WorkflowViewState.IdRef="If_58">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(1).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="1062,568" sap2010:WorkflowViewState.IdRef="If_57">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(1).Equals(&quot;PROMERICA&quot;)]" sap:VirtualizedContainerService.HintSize="683,410" sap2010:WorkflowViewState.IdRef="If_56">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\PROMERICA_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">["El Banco '"+row(1).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre de la sociedad anterior se le asigna el nombre de la sociedad actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,157.333333333333" sap2010:WorkflowViewState.IdRef="Assign_91">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastSociedadesArray(0)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="914.666666666667,820.666666666667" sap2010:WorkflowViewState.IdRef="If_65">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,544.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos1.xlsx</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnQuickBooks">[row(3).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Sociedad">[row(0).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_50">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">SI</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_51">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,566.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="5">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="376,389.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{row(0).ToString, row(1).ToString, &quot;'&quot;+row(3).ToString, &quot;'&quot;+row(4).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="334,235.333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddDataRow>
                            <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,606.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_7" NumberOfRetries="5">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="756,429.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_92">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="714,275.333333333333" sap2010:WorkflowViewState.IdRef="If_163">
                              <If.Then>
                                <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_6" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[in_out_ReporteConfig]" />
                              </If.Then>
                              <If.Else>
                                <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_7" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[&quot;ReportesExcel\&quot; + in_out_ReporteConfig]" />
                              </If.Else>
                            </If>
                            <Delay DisplayName="Delay 2s" Duration="[TimeSpan.FromMilliseconds(2000)]" sap:VirtualizedContainerService.HintSize="714,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                    <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;) OR Comentarios.Equals(&quot;Ocurrio un Error desconocido.&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,287.333333333333" sap2010:WorkflowViewState.IdRef="If_66">
                      <If.Then>
                        <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,92.6666666666667" sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[LastBanksArray(0)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT2]" DisplayName="For Each Account 2" sap:VirtualizedContainerService.HintSize="200,148" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body For Each Account 2" sap:VirtualizedContainerService.HintSize="956.666666666667,5000" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                      <Variable x:TypeArguments="x:String" Name="Comentarios" />
                      <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                      <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                      <Variable x:TypeArguments="x:Boolean" Name="PerfilChanged" />
                      <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_97">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_53">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="914.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_83">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(1).ToString.Equals(LastBanksArray(1))]" sap:VirtualizedContainerService.HintSize="914.666666666667,867.333333333333" sap2010:WorkflowViewState.IdRef="If_67">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="508.666666666667,608" sap2010:WorkflowViewState.IdRef="Sequence_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="467,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="466.666666666667,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(1)]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="466.666666666667,216.666666666667" sap2010:WorkflowViewState.IdRef="OpenBrowser_4" Url="[row(2).ToString]">
                            <ui:OpenBrowser.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_4" />
                                </Sequence>
                              </ActivityAction>
                            </ui:OpenBrowser.Body>
                          </ui:OpenBrowser>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If sap2010:Annotation.AnnotationText="Se verifica si es la primera corrida del ciclo, para ello se utiliza el valor predefinido anteriormente." Condition="[NOT LastSociedadesArray(1).Equals(&quot;null&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,615.333333333333" sap2010:WorkflowViewState.IdRef="If_113">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <If Condition="[LastBanksArray(1).Equals(row(1).ToString)]" sap:VirtualizedContainerService.HintSize="878,390" sap2010:WorkflowViewState.IdRef="If_155">
                          <If.Then>
                            <If Condition="[LastSociedadesArray(1).Equals(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="570,226" sap2010:WorkflowViewState.IdRef="If_110">
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_85">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_86">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_135">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_136">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBanksArray(1)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(1).ToString]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(1).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,131.333333333333" sap2010:WorkflowViewState.IdRef="If_123">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(1).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="3336,1516" sap2010:WorkflowViewState.IdRef="If_122">
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_105" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(1).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1358" sap2010:WorkflowViewState.IdRef="If_121">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(1).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1200" sap2010:WorkflowViewState.IdRef="If_120">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_107" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(1).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1042" sap2010:WorkflowViewState.IdRef="If_119">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_108" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(1).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1820,884" sap2010:WorkflowViewState.IdRef="If_118">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_109" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(1).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1441,726" sap2010:WorkflowViewState.IdRef="If_117">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(1).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="1062,568" sap2010:WorkflowViewState.IdRef="If_116">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(1).Equals(&quot;PROMERICA&quot;)]" sap:VirtualizedContainerService.HintSize="683,410" sap2010:WorkflowViewState.IdRef="If_115">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_142" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\PROMERICA_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">["El Banco '"+row(1).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre de la sociedad anterior se le asigna el nombre de la sociedad actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,157.333333333333" sap2010:WorkflowViewState.IdRef="Assign_90">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastSociedadesArray(1)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="914.666666666667,820.666666666667" sap2010:WorkflowViewState.IdRef="If_77">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,544.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_70">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_126" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos2.xlsx</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnQuickBooks">[row(3).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Sociedad">[row(0).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_112">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">SI</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_113">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,566.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="5">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="376,389.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_46">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{row(0).ToString, row(1).ToString, &quot;'&quot;+row(3).ToString, &quot;'&quot;+row(4).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="334,235.333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:AddDataRow>
                            <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,606.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_8" NumberOfRetries="5">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="756,429.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_93">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="714,275.333333333333" sap2010:WorkflowViewState.IdRef="If_164">
                              <If.Then>
                                <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_8" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[in_out_ReporteConfig]" />
                              </If.Then>
                              <If.Else>
                                <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_9" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[&quot;ReportesExcel\&quot; + in_out_ReporteConfig]" />
                              </If.Else>
                            </If>
                            <Delay DisplayName="Delay 2s" Duration="[TimeSpan.FromMilliseconds(2000)]" sap:VirtualizedContainerService.HintSize="714,22" sap2010:WorkflowViewState.IdRef="Delay_10" />
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                    <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;) OR Comentarios.Equals(&quot;Ocurrio un Error desconocido.&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,285.333333333333" sap2010:WorkflowViewState.IdRef="If_78">
                      <If.Then>
                        <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_61">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[LastBanksArray(1)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Parallel>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT3]" DisplayName="For Each Account 3" sap:VirtualizedContainerService.HintSize="990.666666666667,5300.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body For Each Account 3" sap:VirtualizedContainerService.HintSize="956.666666666667,5146" sap2010:WorkflowViewState.IdRef="Sequence_53">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                    <Variable x:TypeArguments="x:String" Name="Comentarios" />
                    <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                    <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                    <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                    <Variable x:TypeArguments="x:Boolean" Name="PerfilChanged" />
                    <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_98">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,107.333333333333" sap2010:WorkflowViewState.IdRef="Assign_62">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="914.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_84">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(1).ToString.Equals(LastBanksArray(2))]" sap:VirtualizedContainerService.HintSize="914.666666666667,869.333333333333" sap2010:WorkflowViewState.IdRef="If_79">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_63">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="508.666666666667,610" sap2010:WorkflowViewState.IdRef="Sequence_49">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="466.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_64">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="466.666666666667,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(2)]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="466.666666666667,216.666666666667" sap2010:WorkflowViewState.IdRef="OpenBrowser_5" Url="[row(2).ToString]">
                          <ui:OpenBrowser.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_5" />
                              </Sequence>
                            </ActivityAction>
                          </ui:OpenBrowser.Body>
                        </ui:OpenBrowser>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If sap2010:Annotation.AnnotationText="Se verifica si es la primera corrida del ciclo, para ello se utiliza el valor predefinido anteriormente." Condition="[NOT LastSociedadesArray(2).Equals(&quot;null&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,615.333333333333" sap2010:WorkflowViewState.IdRef="If_114">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[LastBanksArray(2).Equals(row(1).ToString)]" sap:VirtualizedContainerService.HintSize="878,390" sap2010:WorkflowViewState.IdRef="If_156">
                        <If.Then>
                          <If Condition="[LastSociedadesArray(2).Equals(row(0).ToString)]" sap:VirtualizedContainerService.HintSize="570,226" sap2010:WorkflowViewState.IdRef="If_111">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_87">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_88">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_137">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[PerfilChanged]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,140.666666666667" sap2010:WorkflowViewState.IdRef="Assign_138">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LastBanksArray(2)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[row(1).ToString]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(1).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,131.333333333333" sap2010:WorkflowViewState.IdRef="If_132">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                    <If.Else>
                      <If Condition="[row(1).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="3336,1516" sap2010:WorkflowViewState.IdRef="If_131">
                        <If.Then>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_114" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                        <If.Else>
                          <If Condition="[row(1).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1358" sap2010:WorkflowViewState.IdRef="If_130">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_115" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Then>
                            <If.Else>
                              <If Condition="[row(1).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1200" sap2010:WorkflowViewState.IdRef="If_129">
                                <If.Then>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_116" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </If.Then>
                                <If.Else>
                                  <If Condition="[row(1).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1042" sap2010:WorkflowViewState.IdRef="If_128">
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_117" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                    <If.Else>
                                      <If Condition="[row(1).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1820,884" sap2010:WorkflowViewState.IdRef="If_127">
                                        <If.Then>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_118" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[row(1).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1441,726" sap2010:WorkflowViewState.IdRef="If_126">
                                            <If.Then>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </If.Then>
                                            <If.Else>
                                              <If Condition="[row(1).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="1062,568" sap2010:WorkflowViewState.IdRef="If_125">
                                                <If.Then>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[row(1).Equals(&quot;PROMERICA&quot;)]" sap:VirtualizedContainerService.HintSize="683,410" sap2010:WorkflowViewState.IdRef="If_124">
                                                    <If.Then>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_143" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\PROMERICA_Extraction.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(4).ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_PerfilChanged">[PerfilChanged]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_LinkPaginaBanco">[row(2).ToString]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[row(0).ToString]</InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">["El Banco '"+row(1).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </If.Else>
                                  </If>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                  <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre de la sociedad anterior se le asigna el nombre de la sociedad actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="914.666666666667,157.333333333333" sap2010:WorkflowViewState.IdRef="Assign_89">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LastSociedadesArray(2)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="914.666666666667,820.666666666667" sap2010:WorkflowViewState.IdRef="If_89">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,544.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_71">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos3.xlsx</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnQuickBooks">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Sociedad">[row(0).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_114">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">SI</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_115">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,566.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_6" NumberOfRetries="5">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="376,389.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_52">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{row(0).ToString, row(1).ToString, &quot;'&quot;+row(3).ToString, &quot;'&quot;+row(4).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="334,235.333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                          <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="914.666666666667,606.666666666667" sap2010:WorkflowViewState.IdRef="RetryScope_9" NumberOfRetries="5">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="756,429.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_94">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="714,275.333333333333" sap2010:WorkflowViewState.IdRef="If_165">
                            <If.Then>
                              <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_10" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[in_out_ReporteConfig]" />
                            </If.Then>
                            <If.Else>
                              <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_11" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[&quot;ReportesExcel\&quot; + in_out_ReporteConfig]" />
                            </If.Else>
                          </If>
                          <Delay DisplayName="Delay 2s" Duration="[TimeSpan.FromMilliseconds(2000)]" sap:VirtualizedContainerService.HintSize="714,22" sap2010:WorkflowViewState.IdRef="Delay_11" />
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;) OR Comentarios.Equals(&quot;Ocurrio un Error desconocido.&quot;)]" sap:VirtualizedContainerService.HintSize="914.666666666667,287.333333333333" sap2010:WorkflowViewState.IdRef="If_90">
                    <If.Then>
                      <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,92.6666666666667" sap2010:WorkflowViewState.IdRef="Assign_70">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[LastBanksArray(2)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[""]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </If.Then>
                  </If>
                  <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="912,102" sap2010:WorkflowViewState.IdRef="Assign_99">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="678,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(0)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="678,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(1)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="678,159.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBanksArray(2)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="678,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Se consolida toda la informacion obtenida en un solo archivo...&quot;]" />
          <Assign sap:VirtualizedContainerService.HintSize="678,62" sap2010:WorkflowViewState.IdRef="Assign_116">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[StringDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Date.Now.ToString("dd-MM-yyyy")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="678,3528" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="641.333333333333,3369.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheets" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[new System.IO.FileInfo(file.ToString).Name.Contains(&quot;MovimientosBancarios_&quot;)]" sap:VirtualizedContainerService.HintSize="599.333333333333,254.666666666667" sap2010:WorkflowViewState.IdRef="If_159">
                    <If.Then>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="599.333333333333,222.666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[file.ToString]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[ExcelSheets]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="599.333333333333,2599.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[ExcelSheets]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="562.666666666667,2471.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="SheetContent" />
                            <Variable x:TypeArguments="x:String" Name="SheetSociedad" />
                            <Variable x:TypeArguments="x:String" Name="SheetNumeroQuickbooks" />
                            <Variable x:TypeArguments="x:String" Name="SheetSaldodisponible" />
                            <Variable x:TypeArguments="scg:List(x:String)" Name="FinalExcelSheets" />
                            <Variable x:TypeArguments="x:Boolean" Name="SheetExist" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap2010:Annotation.AnnotationText="Si el nombre de la hoja de excel es Sheet1, esta vacia." Condition="[sheet.ToString.Equals(&quot;Sheet1&quot;)]" sap:VirtualizedContainerService.HintSize="520.666666666667,285.333333333333" sap2010:WorkflowViewState.IdRef="If_53">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </If.Then>
                          </If>
                          <ui:ReadCell Cell="B1" DisplayName="Read Cell Saldo Disponible" sap:VirtualizedContainerService.HintSize="520.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadCell_3" SheetName="[sheet.ToString]" WorkbookPath="[file.ToString]">
                            <ui:ReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[SheetSaldodisponible]</OutArgument>
                            </ui:ReadCell.Result>
                          </ui:ReadCell>
                          <ui:ReadCell Cell="A2" DisplayName="Read Cell Sociedad" sap:VirtualizedContainerService.HintSize="520.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="[sheet.ToString]" WorkbookPath="[file.ToString]">
                            <ui:ReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[SheetSociedad]</OutArgument>
                            </ui:ReadCell.Result>
                          </ui:ReadCell>
                          <ui:ReadCell Cell="B2" DisplayName="Read Cell Numero en QuickBooks" sap:VirtualizedContainerService.HintSize="520.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadCell_2" SheetName="[sheet.ToString]" WorkbookPath="[file.ToString]">
                            <ui:ReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[SheetNumeroQuickbooks]</OutArgument>
                            </ui:ReadCell.Result>
                          </ui:ReadCell>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="520.666666666667,324.666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <TryCatch.Try>
                              <ui:ReadRange AddHeaders="True" DataTable="[SheetContent]" DisplayName="Read Range Movimientos" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_4" Range="A4" SheetName="[sheet.ToString]" WorkbookPath="[file.ToString]" />
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <Assign sap:VirtualizedContainerService.HintSize="520.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_140">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520.666666666667,384.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="archivo" />
                                </ActivityAction.Argument>
                                <If Condition="[new System.IO.FileInfo(archivo.ToString).Name.Contains(&quot;MovimientosBancarios_&quot; + SheetSociedad + &quot;_&quot;)]" sap:VirtualizedContainerService.HintSize="484,256.666666666667" sap2010:WorkflowViewState.IdRef="If_160">
                                  <If.Then>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_141">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["MovimientosBancarios\" + new System.IO.FileInfo(archivo.ToString).Name.ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <If Condition="[MovimientosBancariosFile.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="520.666666666667,256.666666666667" sap2010:WorkflowViewState.IdRef="If_161">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_100">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["MovimientosBancarios\MovimientosBancarios_" + SheetSociedad + "_" + StringDate + ".xlsx"]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_91">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:WriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="520.666666666667,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="[SheetNumeroQuickbooks]" Text="Saldo Disponible:" WorkbookPath="[MovimientosBancariosFile]" />
                          <ui:WriteCell Cell="B1" DisplayName="Write Saldo Disponible" sap:VirtualizedContainerService.HintSize="520.666666666667,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="[SheetNumeroQuickbooks]" Text="[SheetSaldodisponible]" WorkbookPath="[MovimientosBancariosFile]" />
                          <ui:WriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se llena el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." DataTable="[SheetContent]" DisplayName="Write Excel Final" sap:VirtualizedContainerService.HintSize="520.666666666667,176.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[SheetNumeroQuickbooks]" StartingCell="A3" WorkbookPath="[MovimientosBancariosFile]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WriteRange>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="599.333333333333,80.6666666666667" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file.ToString]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="724.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[exception.ToString]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="1182.66666666667,278.666666666667" sap2010:WorkflowViewState.IdRef="If_158">
      <If.Then>
        <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[in_out_ReporteConfig]" />
      </If.Then>
      <If.Else>
        <ui:WriteRange AddHeaders="False" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_5" SheetName="RegistroBot" StartingCell="A1" WorkbookPath="[&quot;ReportesExcel\&quot; + in_out_ReporteConfig]" />
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1182.66666666667,62" sap2010:WorkflowViewState.IdRef="Assign_101">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1182.66666666667,327.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_64">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_102">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="1182.66666666667,62" sap2010:WorkflowViewState.IdRef="Assign_103">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[AttachmentsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[new string(Count){}]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_RunType.Equals(&quot;AddBancosRun&quot;)]" sap:VirtualizedContainerService.HintSize="1182.66666666667,226" sap2010:WorkflowViewState.IdRef="If_162">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_142">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AttachmentsList(0)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_out_ReporteConfig]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_104">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AttachmentsList(0)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Path.GetFullPath("ReportesExcel/") + in_out_ReporteConfig]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Assign sap:VirtualizedContainerService.HintSize="1183,60" sap2010:WorkflowViewState.IdRef="Assign_105">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1182.66666666667,429.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_65">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_106">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_107">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[AttachmentsList(Count)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[file.ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Se obtienen el correo del usuario al cual va ir el correo con los adjuntos finales del proceso de extraccion bancaria." AssetName="BotMovimientosBancarios_Output_ToEmail" DisplayName="Get To Email" FolderPath="Conciliaciones" sap:VirtualizedContainerService.HintSize="1182.66666666667,202.666666666667" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[toOutputEmail]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <Assign sap:VirtualizedContainerService.HintSize="1182.66666666667,62" sap2010:WorkflowViewState.IdRef="Assign_108">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[ToEmailsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[split(toOutputEmail, ",")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1182.66666666667,62" sap2010:WorkflowViewState.IdRef="Assign_109">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1182.66666666667,384" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[ToEmailsList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="email" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_66">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_110">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ToEmailsList(Count)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[email.ToString.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_111">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="CredencialesGmail_Bot_Gsuite" DisplayName="Get Credential" FolderPath="Conciliaciones" sap:VirtualizedContainerService.HintSize="1182.66666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[ClientSecret]" Username="[clientID]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Se envia el correo con los movimientos y el reporte...&quot;]" />
    <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" ContinueOnError="{x:Null}" CredentialSecret="{x:Null}" KeyPath="{x:Null}" Password="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" sap2010:Annotation.AnnotationText="Sergio toda la configuración actual es para que los correos salgan por Drive@dilarece es cuestion de copiar y pegar" AuthenticationType="OAuthClientID" CredentialID="[clientID]" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope" Folder="Conciliaciones" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="1182.66666666667,600.666666666667" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyType="JSON" OAuthClient="UiPath" SecureCredentialSecret="[ClientSecret]" Services="Unselected">
      <uga:GSuiteApplicationScope.AuthenticationScopes>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
      </uga:GSuiteApplicationScope.AuthenticationScopes>
      <uga:GSuiteApplicationScope.Body>
        <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,442.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_67">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:SendEmail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" AttachmentList="[AttachmentsList]" AuthScopesInvalid="False" Body="[&quot;El bot ya obtuvo toda la informacion de las cuentas bancarias (&quot;+DateTime.Now.ToString(&quot;d&quot;)+&quot;). Se adjuntan todos los archivos con los movimientos y el reporte del proceso.&quot;]" DisplayName="Send Mail Message" sap:VirtualizedContainerService.HintSize="334,350.666666666667" sap2010:WorkflowViewState.IdRef="SendEmail_1" IsDraft="False" IsHTML="False" Subject="[&quot;Resultado Extracción Bot Conciliaciones Bancarias (&quot;+in_FechaInicio+&quot; - &quot;+in_FechaFinal+&quot;)&quot;]" To="[ToEmailsList]">
              <uga:SendEmail.Attachments>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </uga:SendEmail.Attachments>
            </uga:SendEmail>
          </Sequence>
        </ActivityAction>
      </uga:GSuiteApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uga:GSuiteApplicationScope>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1182.66666666667,373.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="Chrome" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1182.66666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;** Finaliza el proceso de Extraccion Bancaria **&quot;]" />
  </Sequence>
</Activity>