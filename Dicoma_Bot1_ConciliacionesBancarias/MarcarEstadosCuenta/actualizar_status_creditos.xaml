<Activity mc:Ignorable="sap sap2010" x:Class="actualizar_status_creditos_o_debitos" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ContOcurrencias" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Referencia" Type="InArgument(x:String)" />
    <x:Property Name="in_Status" Type="InArgument(x:String)" />
    <x:Property Name="in_Excel" Type="InArgument(x:String)" />
    <x:Property Name="in_Sheet" Type="InArgument(x:String)" />
    <x:Property Name="in_QuickbooksDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_ColName" Type="InArgument(x:String)" />
    <x:Property Name="in_MovementsDT" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1208,1304</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>actualizar_status_creditos_o_debitos_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="actualizar_status_creditos_o_debitos" sap:VirtualizedContainerService.HintSize="1217,1239" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="ContBancoOcurrencias" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1175,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[ContBancoOcurrencias]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[in_MovementsDT.Select(  String.Format( "[{0}] = '{1}'","REFERENCIA",in_Referencia ) ).CopyToDataTable.Rows.Count]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_ContOcurrencias.Equals(1) AND ContBancoOcurrencias.Equals(1)]" sap:VirtualizedContainerService.HintSize="1175,1047" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="795,889" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence sap:VirtualizedContainerService.HintSize="757,662" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="MontoQuickbooks" />
                <Variable x:TypeArguments="x:String" Name="MontoBanco" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="715,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MontoQuickbooks]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_QuickbooksDT.Select(  String.Format( "[{0}] = '{1}'",in_ColName,in_Referencia )).CopyToDataTable.Rows(0)(5).ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="715,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MontoQuickbooks]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[MontoQuickbooks.Replace(",", "").Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="715,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MontoBanco]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_MovementsDT.Select(  String.Format( "[{0}] = '{1}'","REFERENCIA",in_Referencia )).CopyToDataTable.Rows(0)(4).ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[MontoQuickbooks.Equals(MontoBanco)]" sap:VirtualizedContainerService.HintSize="715,270" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Referencia" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Sheet" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Status" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                        <Literal x:TypeArguments="x:String">SIN Diferencias.</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                        <Literal x:TypeArguments="x:Boolean" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Referencia" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Sheet" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Status" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                        <Literal x:TypeArguments="x:String">Diferencias de Montos.</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                        <Literal x:TypeArguments="x:Boolean" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="761,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Referencia" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Sheet" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Status" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                      <Literal x:TypeArguments="x:String">POSIBLES Diferencias de Montos.</Literal>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                      <Literal x:TypeArguments="x:Boolean" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Referencia" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Sheet" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Status">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Status" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
              <Literal x:TypeArguments="x:String">POSIBLES Diferencias de Montos.</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
              <Literal x:TypeArguments="x:Boolean" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
  </Sequence>
</Activity>