<Activity mc:Ignorable="sap sap2010" x:Class="estados_cuenta" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="cuenta_dt" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Excel" Type="InArgument(x:String)" />
    <x:Property Name="in_HojaExcel" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1368,11242</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>estados_cuenta_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="estados_cuenta" sap:VirtualizedContainerService.HintSize="1378,11177" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ultimo_valor" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt" />
      <Variable x:TypeArguments="x:String" Name="colName" />
      <Variable x:TypeArguments="x:Boolean" Name="final_lista" />
      <Variable x:TypeArguments="x:Int32" Name="i" />
      <Variable x:TypeArguments="sd:DataTable" Name="creditos_dt" />
      <Variable x:TypeArguments="x:Int32" Name="contador_ultimo_intento" />
      <Variable x:TypeArguments="x:String" Name="primer_valor" />
      <Variable x:TypeArguments="x:Boolean" Name="referencias_en_blanco" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke obtener_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/obtener_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="cuenta_dt">[cuenta_dt]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="creditos_dt">[creditos_dt]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ordenar_referencias_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/ordenar_referencias_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke extraer_tabla_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/extraer_tabla_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_nombre_columna_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\encontrar_nombre_columna_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="colName">[colName]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:Annotation.AnnotationText="obtiene el primer valor de la tabla previamente extraida para utilizarlo para saber si en la tabla hay referencias" sap:VirtualizedContainerService.HintSize="1336,117" sap2010:WorkflowViewState.IdRef="Assign_23">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[primer_valor]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dt.Rows(1)(colName).ToString]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ordenar_referencias_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/ordenar_referencias_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke extraer_tabla_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/extraer_tabla_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ordenar_referencias_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/ordenar_referencias_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_nombre_columna_creditos workflow" sap:VirtualizedContainerService.HintSize="1336,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\encontrar_nombre_columna_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="colName">[colName]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:Annotation.AnnotationText="obtiene el primer valor de la tabla previamente extraida para utilizarlo como valor de referencia y asi saber si ya se recorrio la tabla" sap:VirtualizedContainerService.HintSize="1336,132" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ultimo_valor]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dt.Rows(1)(colName).ToString]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1336,60" sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[referencias_en_blanco]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[String.IsNullOrEmpty(primer_valor) AND String.IsNullOrEmpty(ultimo_valor)]" sap:VirtualizedContainerService.HintSize="1336,247" sap2010:WorkflowViewState.IdRef="If_10">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[referencias_en_blanco]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="[i]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1336,9153" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[creditos_dt.Rows]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ref" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1300,9029" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="exisiste_referencia" />
              <Variable x:TypeArguments="x:Boolean" Name="ultima_revision" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[String.IsNullOrEmpty(ref(&quot;REFERENCIA&quot;).ToString) OR ref(&quot;REFERENCIA&quot;).ToString().Equals(&quot;0&quot;)]" sap:VirtualizedContainerService.HintSize="1258,453" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">[ref("REFERENCIA").ToString()]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">NO</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Comment">Sin Referencia.</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">False</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[referencias_en_blanco]" sap:VirtualizedContainerService.HintSize="1258,453" sap2010:WorkflowViewState.IdRef="If_11">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">[ref("REFERENCIA").ToString()]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">NO</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Comment">["No existe la referencia '"+ref("REFERENCIA").ToString()+"'."]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">False</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="1258,60" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[contador_ultimo_intento]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="1258,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[final_lista]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="1258,60" sap2010:WorkflowViewState.IdRef="Assign_38">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[ultima_revision]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Buscar referencia por toda la lista" DisplayName="While" sap:VirtualizedContainerService.HintSize="1258,7651" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
              <ui:InterruptibleWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1222,7455" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="contador_ocurrencias" />
                    <Variable x:TypeArguments="sd:DataTable" Name="pruebaDT" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1180,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;---------------buscando------&quot;+ref(&quot;REFERENCIA&quot;).ToString()]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke extraer_tabla_creditos workflow" sap:VirtualizedContainerService.HintSize="1180,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\extraer_tabla_creditos.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_nombre_columna_creditos workflow" sap:VirtualizedContainerService.HintSize="1180,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\encontrar_nombre_columna_creditos.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="colName">[colName]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="1180,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[exisiste_referencia]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt.Select(  String.Format( "[{0}] = '{1}'",colName,ref("REFERENCIA").ToString() )   ).Length &gt; 0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[exisiste_referencia]" sap:VirtualizedContainerService.HintSize="1180,4360" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="682,4203" sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="cantidad_ocurrencias" />
                          <Variable x:TypeArguments="x:String" Name="ultima_linea" />
                          <Variable x:TypeArguments="x:Int32" Name="ContIntentos" />
                          <Variable x:TypeArguments="x:String" Name="LastUltimaLinea" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ultima_linea]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[ref("REFERENCIA").ToString()]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[LastUltimaLinea]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[ContIntentos]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InterruptibleWhile Condition="[ultima_linea.Equals(ref(&quot;REFERENCIA&quot;).ToString())]" DisplayName="While" sap:VirtualizedContainerService.HintSize="640,3497" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                          <ui:InterruptibleWhile.Body>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604,3332" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_ultimo_elemento workflow" sap:VirtualizedContainerService.HintSize="562,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/encontrar_ultimo_elemento.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="colName">[colName]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="ultimo_valor">[ultima_linea]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[ultimo_valor.Trim.Equals(ultima_linea.Trim)]" sap:VirtualizedContainerService.HintSize="562,624" sap2010:WorkflowViewState.IdRef="If_14">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,438" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[ContIntentos]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[ContIntentos + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[ContIntentos &gt; 3]" sap:VirtualizedContainerService.HintSize="484,246" sap2010:WorkflowViewState.IdRef="If_13">
                                      <If.Then>
                                        <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[LastUltimaLinea.Equals(ultima_linea.Trim)]" sap:VirtualizedContainerService.HintSize="562,624" sap2010:WorkflowViewState.IdRef="If_16">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,438" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[ContIntentos]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[ContIntentos + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[ContIntentos &gt; 2]" sap:VirtualizedContainerService.HintSize="484,246" sap2010:WorkflowViewState.IdRef="If_15">
                                      <If.Then>
                                        <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[LastUltimaLinea]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ultima_linea]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:Annotation.AnnotationText="Cantiadad veces que aparece la referencia" sap:VirtualizedContainerService.HintSize="562,91" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[cantidad_ocurrencias]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[dt.Select(  String.Format( "[{0}] = '{1}'",colName,ref("REFERENCIA").ToString() )   ).CopyToDataTable.Rows.Count]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[contador_ocurrencias]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="562,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Cantidad de ocurrencias: &quot;+cantidad_ocurrencias.ToString]" />
                              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Presiona click a cada una de las ocurrencias que tiene una referencia" DisplayName="Click ocurrencias" sap:VirtualizedContainerService.HintSize="562,564" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                                <ui:InterruptibleWhile.Body>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,368" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ClickText DelayBefore="{x:Null}" DelayMS="{x:Null}" FormattedText="{x:Null}" SendWindowMessages="{x:Null}" sap2010:Annotation.AnnotationText="Una vez encontrado la referencia le da click y rompe el ciclo" ClickType="CLICK_SINGLE" ContinueOnError="False" DisplayName="Click en texto referencia" sap:VirtualizedContainerService.HintSize="334,176" sap2010:WorkflowViewState.IdRef="ClickText_1" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="[contador_ocurrencias]" Text="[ref(&quot;REFERENCIA&quot;).ToString()]">
                                      <ui:ClickText.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:ClickText.CursorPosition>
                                      <ui:ClickText.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="10175606-7ce1-4afc-a803-218d8bbada9f" InformativeScreenshot="2c93adc9f6e86e951eb234c8d47065d2" Selector="&lt;wnd app='qbw*.exe' cls='MauiFrame' title='*- Intuit QuickBooks Enterpr*' /&gt;&lt;wnd cls='MauiForm' title='Reconcile - *' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:ClickText.Target>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ClickText>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[contador_ocurrencias]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[contador_ocurrencias + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:InterruptibleWhile.Body>
                                <ui:InterruptibleWhile.Condition>
                                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="contador_ocurrencias &lt;= cantidad_ocurrencias" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                                </ui:InterruptibleWhile.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InterruptibleWhile>
                              <If Condition="[ultima_linea.Equals(ref(&quot;REFERENCIA&quot;).ToString())]" sap:VirtualizedContainerService.HintSize="562,694" sap2010:WorkflowViewState.IdRef="If_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="421,508" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke recorrer_lista_creditos workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/recorrer_lista_creditos.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="cantidad_clicks">[dt.Rows.Count - 2]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke extraer_tabla_creditos workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/extraer_tabla_creditos.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_nombre_columna_creditos workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\encontrar_nombre_columna_creditos.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="colName">[colName]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ui:InterruptibleWhile.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InterruptibleWhile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke actualizar_status_creditos workflow" sap:VirtualizedContainerService.HintSize="640,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\actualizar_status_creditos.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_ContOcurrencias">[cantidad_ocurrencias]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Referencia">[ref("REFERENCIA").ToString()]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Status">SI</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_QuickbooksDT">[dt]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ColName">[colName]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[cuenta_dt]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="640,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[ultima_revision]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break sap:VirtualizedContainerService.HintSize="640,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:Annotation.AnnotationText="Presiona el boton scroll down para continuar buscando en la lista." sap:VirtualizedContainerService.HintSize="453,327" sap2010:WorkflowViewState.IdRef="Sequence_28">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="411,204" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke recorrer_lista_creditos workflow" sap:VirtualizedContainerService.HintSize="369,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta/recorrer_lista_creditos.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="cantidad_clicks">10</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If Condition="[String.IsNullOrEmpty(ultimo_valor)]" sap:VirtualizedContainerService.HintSize="1180,217" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[final_lista]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt.Select(  String.Format( "[{0}] is null OR [{0}] = ''",colName )   ).Length &gt; 0]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[final_lista]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt.Select(  String.Format( "[{0}] = '{1}'",colName,ultimo_valor )   ).Length &gt; 0]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <If Condition="[final_lista]" sap:VirtualizedContainerService.HintSize="1180,2171" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="917,1985" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="countador_pgup" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[ultima_revision]" sap:VirtualizedContainerService.HintSize="875,727" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,570" sap2010:WorkflowViewState.IdRef="Sequence_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'MauiForm'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="f5" KeyModifiers="None" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8a9839f1-4f1c-4e60-94f5-6c0ca40b2fb5" InformativeScreenshot="f56a4dcc377cd17c75699d4001aa72e6" Selector="&lt;wnd app='qbw.exe' cls='MauiFrame' title='*- Intuit QuickBooks Enterpr*' /&gt;&lt;wnd cls='MauiForm' title='Reconcile -*' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <Delay DisplayName="Delay 6s" Duration="[TimeSpan.FromMilliseconds(6000)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[ultima_revision]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[final_lista]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Continue_3" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <If Condition="[i = creditos_dt.Rows.Count - 1 And contador_ultimo_intento &lt; 1]" sap:VirtualizedContainerService.HintSize="875,1126" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[contador_ultimo_intento]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[contador_ultimo_intento + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[final_lista]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="526,969" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;-------------no existe-----------&quot;+ref(&quot;REFERENCIA&quot;).ToString()]" />
                              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[ultima_revision]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">[ref("REFERENCIA").ToString()]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Status">NO</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Comment">["No existe la referencia '"+ref("REFERENCIA").ToString()+"'."]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">False</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[i &lt; creditos_dt.Rows.Count -1]" sap:VirtualizedContainerService.HintSize="484,494" sap2010:WorkflowViewState.IdRef="If_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Int32" Name="contador_scrolldown" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'MauiForm'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="f5" KeyModifiers="None" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8a9839f1-4f1c-4e60-94f5-6c0ca40b2fb5" InformativeScreenshot="f56a4dcc377cd17c75699d4001aa72e6" Selector="&lt;wnd app='qbw.exe' cls='MauiFrame' title='*- Intuit QuickBooks Enterpr*' /&gt;&lt;wnd cls='MauiForm' title='Reconcile -*' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <Delay DisplayName="Delay 6s" Duration="[TimeSpan.FromMilliseconds(6000)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ui:InterruptibleWhile.Body>
              <ui:InterruptibleWhile.Condition>
                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="not final_lista" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
              </ui:InterruptibleWhile.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleWhile>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>