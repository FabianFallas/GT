<Activity mc:Ignorable="sap sap2010" x:Class="seleccionar_debitos_creditos" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="movimientosDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_HojaExcel" Type="InArgument(x:String)" />
    <x:Property Name="in_Excel" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1689,4515</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>seleccionar_debitos_creditos_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="seleccionar_debitos_creditos" sap:VirtualizedContainerService.HintSize="1699,4450" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_quick_books" />
      <Variable x:TypeArguments="x:String" Name="colname" />
      <Variable x:TypeArguments="x:Boolean" Name="IsDebitosEmpty" />
      <Variable x:TypeArguments="x:Boolean" Name="IsCreditosEmpty" />
      <Variable x:TypeArguments="x:Boolean" Name="AllTableIsEmpty" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke revisar_tabla_vacia_debitos_creditos workflow" sap:VirtualizedContainerService.HintSize="1657,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\revisar_tabla_vacia_debitos_creditos.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsDebitosEmpty">[IsDebitosEmpty]</OutArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsCreditosEmpty">[IsCreditosEmpty]</OutArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AllTableIsEmpty">[AllTableIsEmpty]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[NOT AllTableIsEmpty]" sap:VirtualizedContainerService.HintSize="1657,4206" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1176,4048" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="OGmovimientosDT" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="1134,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[OGmovimientosDT]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[movimientosDT]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke extraer_tabla_creditos_debitos workflow" sap:VirtualizedContainerService.HintSize="1134,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\extraer_tabla_creditos_debitos.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt_quick_books]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke encontrar_nombre_columna workflow" sap:VirtualizedContainerService.HintSize="1134,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\encontrar_nombre_columna.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt_quick_books]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="colName">[colname]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="1134,60" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[movimientosDT]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[movimientosDT.AsEnumerable().GroupBy(Function(a) a.Field(Of String)("REFERENCIA")).Select(Function(b) b.First).CopyToDataTable()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[movimientosDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="1134,3452" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1100,3332" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="exisiste_referencia_debitos" />
                    <Variable x:TypeArguments="x:Boolean" Name="existe_referencia_creditos" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1058,873" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <If sap2010:Annotation.AnnotationText="Si la columna Debitos viene vacia o en 0, Entonces el movimiento es un CREDITO." Condition="[String.IsNullOrEmpty(CurrentRow(&quot;DEBITOS&quot;).ToString.Trim) OR CurrentRow(&quot;DEBITOS&quot;).ToString.Trim.Equals(&quot;0&quot;) OR CurrentRow(&quot;DEBITOS&quot;).ToString.Replace(&quot;,&quot;, &quot;.&quot;).Trim.Equals(&quot;0.00&quot;) OR CurrentRow(&quot;DEBITOS&quot;).ToString.Replace(&quot;,&quot;, &quot;.&quot;).Trim.Equals(&quot;0.0&quot;)]" sap:VirtualizedContainerService.HintSize="1013,642" sap2010:WorkflowViewState.IdRef="If_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <If Condition="[IsCreditosEmpty]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;REFERENCIA&quot;).ToString()" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaExcel" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                                      <Literal x:TypeArguments="x:String">NO</Literal>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                                      <Literal x:TypeArguments="x:String">No hay creditos en Quickbooks.</Literal>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                                      <Literal x:TypeArguments="x:Boolean" />
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <If Condition="[IsDebitosEmpty]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_7">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;REFERENCIA&quot;).ToString()" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaExcel" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                                      <Literal x:TypeArguments="x:String">NO</Literal>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                                      <Literal x:TypeArguments="x:String">No hay debitos en Quickbooks.</Literal>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                                      <Literal x:TypeArguments="x:Boolean" Value="True" />
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1019,711" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <If sap2010:Annotation.AnnotationText="Si la columna Debitos viene vacia o en 0, Entonces el movimiento es un CREDITO." Condition="[String.IsNullOrEmpty(CurrentRow(&quot;DEBITO&quot;).ToString.Trim) OR CurrentRow(&quot;DEBITO&quot;).ToString.Trim.Equals(&quot;0&quot;) OR CurrentRow(&quot;DEBITO&quot;).ToString.Replace(&quot;,&quot;, &quot;.&quot;).Trim.Equals(&quot;0.00&quot;) OR CurrentRow(&quot;DEBITO&quot;).ToString.Replace(&quot;,&quot;, &quot;.&quot;).Trim.Equals(&quot;0.0&quot;)]" sap:VirtualizedContainerService.HintSize="1013,642" sap2010:WorkflowViewState.IdRef="If_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <If Condition="[IsCreditosEmpty]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_11">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;REFERENCIA&quot;).ToString()" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaExcel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                                          <Literal x:TypeArguments="x:String">NO</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                                          <Literal x:TypeArguments="x:String">No hay creditos en Quickbooks.</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                                          <Literal x:TypeArguments="x:Boolean" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_5" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Then>
                            <If.Else>
                              <If Condition="[IsDebitosEmpty]" sap:VirtualizedContainerService.HintSize="484,453" sap2010:WorkflowViewState.IdRef="If_12">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="377,266" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="335,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactions.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;REFERENCIA&quot;).ToString()" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Excel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Excel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaExcel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                                          <Literal x:TypeArguments="x:String">NO</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Comment">
                                          <Literal x:TypeArguments="x:String">No hay debitos en Quickbooks.</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">
                                          <Literal x:TypeArguments="x:Boolean" Value="True" />
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:Continue sap:VirtualizedContainerService.HintSize="335,22" sap2010:WorkflowViewState.IdRef="Continue_6" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1051,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;---------------buscando------&quot;+CurrentRow(&quot;REFERENCIA&quot;).ToString()]" />
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1051,291" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[exisiste_referencia_debitos]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt_quick_books.Select(  String.Format( "[{0}] = '{1}'",colname,CurrentRow("REFERENCIA").ToString() )   ).Length &gt; 0]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,129" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[exisiste_referencia_debitos]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <If Condition="[dt_quick_books.Columns.Contains(colname+&quot;2&quot;)]" sap:VirtualizedContainerService.HintSize="1058,339" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[existe_referencia_creditos]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[dt_quick_books.Select(  String.Format( "[{0}] = '{1}'",colname+"2",CurrentRow("REFERENCIA").ToString() )   ).Length &gt; 0]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If Condition="[existe_referencia_creditos OR exisiste_referencia_debitos]" sap:VirtualizedContainerService.HintSize="1058,1486" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="611,1328" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="cantidad_ocurrencias" />
                          <Variable x:TypeArguments="x:Int32" Name="contador_ocurrencias" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[exisiste_referencia_debitos]" sap:VirtualizedContainerService.HintSize="569,249" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Assign sap2010:Annotation.AnnotationText="Cantiadad veces que aparece la referencia" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[cantidad_ocurrencias]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[dt_quick_books.Select(  String.Format( "[{0}] = '{1}'",colname,CurrentRow("REFERENCIA").ToString() )   ).CopyToDataTable.Rows.Count]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Assign sap2010:Annotation.AnnotationText="Cantiadad veces que aparece la referencia" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[cantidad_ocurrencias]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[dt_quick_books.Select(  String.Format( "[{0}] = '{1}'",colname+"2",CurrentRow("REFERENCIA").ToString() )   ).CopyToDataTable.Rows.Count]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[contador_ocurrencias]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="569,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Cantidad de ocurrencias: &quot;+cantidad_ocurrencias.ToString]" />
                        <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Presiona click a cada una de las ocurrencias que tiene una referencia" Condition="[contador_ocurrencias &lt;= cantidad_ocurrencias]" DisplayName="Click ocurrencias" sap:VirtualizedContainerService.HintSize="569,564" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                          <ui:InterruptibleWhile.Body>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,368" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ClickText DelayBefore="{x:Null}" DelayMS="{x:Null}" FormattedText="{x:Null}" SendWindowMessages="{x:Null}" sap2010:Annotation.AnnotationText="Una vez encontrado la referencia le da click y rompe el ciclo" ClickType="CLICK_SINGLE" ContinueOnError="False" DisplayName="Click en texto referencia" sap:VirtualizedContainerService.HintSize="334,176" sap2010:WorkflowViewState.IdRef="ClickText_1" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="[contador_ocurrencias]" Text="[CurrentRow(&quot;REFERENCIA&quot;).ToString()]">
                                <ui:ClickText.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:ClickText.CursorPosition>
                                <ui:ClickText.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="10175606-7ce1-4afc-a803-218d8bbada9f" InformativeScreenshot="2c93adc9f6e86e951eb234c8d47065d2" Selector="&lt;wnd app='qbw*.exe' cls='MauiFrame' title='*- Intuit QuickBooks Enterpr*' /&gt;&lt;wnd cls='MauiForm' title='Reconcile - *' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:ClickText.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ClickText>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[contador_ocurrencias]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[contador_ocurrencias + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:InterruptibleWhile.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InterruptibleWhile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke actualizar_status_creditos_o_debitos workflow" sap:VirtualizedContainerService.HintSize="569,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="MarcarEstadosCuenta\actualizar_status_debitos_creditos.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_ContOcurrencias">[cantidad_ocurrencias]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Referencia">[CurrentRow("REFERENCIA").ToString()]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Status">SI</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_QuickbooksDT">[dt_quick_books]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ColName">[colName]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[OGmovimientosDT]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsDebito">[exisiste_referencia_debitos]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="402,335" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="360,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;-------------no existe-----------&quot;+CurrentRow(&quot;REFERENCIA&quot;).ToString()]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="360,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactionsBoth.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">[CurrentRow("REFERENCIA").ToString()]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Status">NO</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Comment">["No se encontro la referencia '"+CurrentRow("REFERENCIA").ToString()+"'."]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="436,324" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[movimientosDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="394,232" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateMarkedTransactions workflow" sap:VirtualizedContainerService.HintSize="360,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Generales\UpdateMarkedTransactionsBoth.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_NumReferencia">[row(1).ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Excel">[in_Excel]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">[in_HojaExcel]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">NO</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Comment">No hay debitos o creditos en Quickbooks.</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>