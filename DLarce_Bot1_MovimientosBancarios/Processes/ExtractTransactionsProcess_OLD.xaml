<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="BotProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FechaFinal" Type="InArgument(x:String)" />
    <x:Property Name="in_FechaInicio" Type="InArgument(x:String)" />
    <x:Property Name="out_ReporteConfig" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1223,9396</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BotProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="BotProcess" sap:VirtualizedContainerService.HintSize="1012,9331" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheetsList" />
      <Variable x:TypeArguments="x:String" Name="ConfigExcelFile" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReporteConfigDT" />
      <Variable x:TypeArguments="x:String" Name="MovimientosBancariosFile" />
      <Variable x:TypeArguments="x:String" Name="DownloadsPath" />
      <Variable x:TypeArguments="x:String" Name="LastBank" />
      <Variable x:TypeArguments="ss:SecureString" Name="gmail_pass" />
      <Variable x:TypeArguments="x:String" Name="gmail_user" />
      <Variable x:TypeArguments="x:String" Name="toOutputEmail" />
      <Variable x:TypeArguments="s:String[]" Name="AttachmentsList" />
      <Variable x:TypeArguments="ss:SecureString" Name="ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="clientID" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="Obtener el Path en el que se gauardasn los archivos descargados." DisplayName="Get DownloadPath" sap:VirtualizedContainerService.HintSize="970,97" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[DownloadsPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)+"\Downloads"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de descargas para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="970,338" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Directory.GetFiles(DownloadsPath, &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,169" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,77" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de Movimientos Bancarios para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="970,338" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,169" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,77" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[file.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se obtienen los Headers del archivo de Reporte del Bot. Para conforme se vaya corriendo el proceso añadir la informacion al reporte." DataTable="[ReporteConfigDT]" DisplayName="Read Bot Report DataTable" sap:VirtualizedContainerService.HintSize="970,138" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="A1" SheetName="RegistroBot" WorkbookPath="ExcelDeConfiguracion\ConfigReporteBot.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Assign sap2010:Annotation.AnnotationText="La direccion en la cual se encuentra el archivo de Configuracion que contiene todas las cuentas." sap:VirtualizedContainerService.HintSize="970,110" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ConfigExcelFile]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">ExcelDeConfiguracion\ExcelConfigCuentas.xlsx</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Se le asigna a una variable llamada &quot;ExcelSheetsList&quot; con el nombre de todas las empresas que se manejan en el proceso.&#xA;" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="970,274" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[ConfigExcelFile]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[ExcelSheetsList]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="970,110" sap2010:WorkflowViewState.IdRef="Assign_16">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[""]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada una de las empresas obtenidas se realiza lo siguiente:" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="970,4669" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ExcelSheetsList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="sheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="934,4507" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT" />
              <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se lee toda la tabla de confirguracion que contiene toda la informacion necesaria para realizar el proceso completo a cada una de las cuentas del proceso." DataTable="[AccountsDT]" DisplayName="Read Accounts DataTable" sap:VirtualizedContainerService.HintSize="892,138" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="A1" SheetName="[sheet.ToString]" WorkbookPath="[ConfigExcelFile]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadRange>
            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que no tienen ningun valor en alguna de las columnas." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="892,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Link "]</InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Cuenta en SAP"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Cuenta en el Banco"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:FilterDataTable>
            <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que tienen como valor &quot;NO&quot; en la columna &quot;Descargar&quot;." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="892,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">["NO"]</InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:FilterDataTable>
            <If sap2010:Annotation.AnnotationText="Si las cuentas obtenidas son iguales a 0 entonces se continua con la siguiente empresa o entidad." Condition="[AccountsDT.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="892,268" sap2010:WorkflowViewState.IdRef="If_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
              </If.Then>
            </If>
            <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del archivo de Movimientos Banancarios." sap:VirtualizedContainerService.HintSize="892,97" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["MovimientosBancarios_" + sheet.ToString.ToUpper + "_" + Date.Now.ToString("dd-MM-yyyy") + ".xlsx"]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="892,166" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" WorkbookPath="[&quot;MovimientosBancarios\&quot; + MovimientosBancariosFile]">
              <ui:WriteCell.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:WriteCell.Text>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:WriteCell>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT]" DisplayName="For Each Account" sap:VirtualizedContainerService.HintSize="892,3118" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body For Each Account" sap:VirtualizedContainerService.HintSize="858,2970" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                      <Variable x:TypeArguments="x:String" Name="Comentarios" />
                      <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                      <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                      <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se realiza el Logout segun banco y posteriormente de cierra Google Chrome" DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage_OLD.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[row(1).ToString]">
                            <ui:OpenBrowser.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                </Sequence>
                              </ActivityAction>
                            </ui:OpenBrowser.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:OpenBrowser>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBank]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1291" sap2010:WorkflowViewState.IdRef="If_8">
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1138" sap2010:WorkflowViewState.IdRef="If_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,985" sap2010:WorkflowViewState.IdRef="If_6">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,832" sap2010:WorkflowViewState.IdRef="If_5">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,679" sap2010:WorkflowViewState.IdRef="If_4">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,536" sap2010:WorkflowViewState.IdRef="If_3">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,393" sap2010:WorkflowViewState.IdRef="If_2">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_2">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                    <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,630" sap2010:WorkflowViewState.IdRef="If_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,400" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">["MovimientosBancarios\" + MovimientosBancariosFile]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">SI</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="816,60" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                    <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_12">
                      <If.Then>
                        <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[LastBank]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                      </If.Then>
                    </If>
                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta en la cual se descargan los archivos." DisplayName="For Each" sap:VirtualizedContainerService.HintSize="816,331" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Directory.GetFiles(DownloadsPath, &quot;*&quot;)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,169" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,77" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[file.ToString]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="970,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage_OLD.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del Excel Report." sap:VirtualizedContainerService.HintSize="970,90" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_ReporteConfig]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["ReporteBot_" + Date.Now.ToString("dd_MM_yyyy_hh-mm-ss") + ".xlsx"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Se crea el Excel que contine el reporte de la ejecucion." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="970,350" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[&quot;ReportesExcel\&quot; + out_ReporteConfig]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,210" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="RegistroBot" StartingCell="A1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap:VirtualizedContainerService.HintSize="970,59" sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="970,333" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,151" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="970,59" sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[AttachmentsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[new string(Count){}]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="970,59" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[AttachmentsList(0)]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.GetFullPath("ReportesExcel/") + out_ReporteConfig]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="970,59" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="970,432" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_29">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[AttachmentsList(Count)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[file.ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Se obtienen el correo del usuario al cual va ir el correo con los adjuntos finales del proceso de extraccion bancaria." AssetName="BotMovimientosBancarios_Output_ToEmail" DisplayName="Get To Email" sap:VirtualizedContainerService.HintSize="970,171" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[toOutputEmail]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="CredencialesGmail_Bot_Gsuite" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="970,77" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[ClientSecret]" Username="[clientID]" />
    <uga:GSuiteApplicationScope ApiKey="{x:Null}" ContinueOnError="{x:Null}" CredentialSecret="{x:Null}" KeyPath="{x:Null}" Password="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" sap2010:Annotation.AnnotationText="Sergio toda la configuración actual es para que los correos salgan por Drive@dilarece es cuestion de copiar y pegar" AuthenticationType="OAuthClientID" CredentialID="[clientID]" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope" Folder="Larce" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="970,568" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyType="JSON" OAuthClient="UiPath" SecureCredentialSecret="[ClientSecret]" Services="Unselected">
      <uga:GSuiteApplicationScope.AuthenticationScopes>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
      </uga:GSuiteApplicationScope.AuthenticationScopes>
      <uga:GSuiteApplicationScope.Body>
        <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,421" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:SendEmail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" AttachmentList="[AttachmentsList]" AuthScopesInvalid="False" Body="El bot ya obtuvo toda la informacion de las cuentas bancarias.&#xD;&#xA;&#xD;&#xA;Se adjuntan todos los archivos con los movimientos y el reporte del proceso." DisplayName="Send Mail Message" sap:VirtualizedContainerService.HintSize="334,329" sap2010:WorkflowViewState.IdRef="SendEmail_1" IsDraft="False" IsHTML="False" Subject="[&quot;Resultado Extracción Bot Conciliaciones Bancarias &quot;+DateTime.Now.ToString(&quot;d&quot;)]" To="[{toOutputEmail, &quot;sergio.monge@cr.gt.com&quot;}]">
              <uga:SendEmail.Attachments>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </uga:SendEmail.Attachments>
            </uga:SendEmail>
          </Sequence>
        </ActivityAction>
      </uga:GSuiteApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uga:GSuiteApplicationScope>
  </Sequence>
</Activity>