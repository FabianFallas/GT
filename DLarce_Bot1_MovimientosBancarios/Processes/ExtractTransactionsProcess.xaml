<Activity mc:Ignorable="sap sap2010" x:Class="BotProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ug="clr-namespace:UiPath.GSuite;assembly=UiPath.GSuite" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FechaFinal" Type="InArgument(x:String)" />
    <x:Property Name="in_FechaInicio" Type="InArgument(x:String)" />
    <x:Property Name="out_ReporteConfig" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1388,13262</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BotProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="43">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="BotProcess" sap:VirtualizedContainerService.HintSize="1138,13197" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheetsList" />
      <Variable x:TypeArguments="x:String" Name="ConfigExcelFile" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReporteConfigDT" />
      <Variable x:TypeArguments="x:String" Name="MovimientosBancariosFile" />
      <Variable x:TypeArguments="x:String" Name="DownloadsPath" />
      <Variable x:TypeArguments="x:String" Name="LastBank1" />
      <Variable x:TypeArguments="ss:SecureString" Name="gmail_pass" />
      <Variable x:TypeArguments="x:String" Name="gmail_user" />
      <Variable x:TypeArguments="x:String" Name="toOutputEmail" />
      <Variable x:TypeArguments="s:String[]" Name="AttachmentsList" />
      <Variable x:TypeArguments="ss:SecureString" Name="ClientSecret" />
      <Variable x:TypeArguments="x:String" Name="clientID" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
      <Variable x:TypeArguments="x:String" Name="LastBank2" />
      <Variable x:TypeArguments="x:String" Name="LastBank3" />
      <Variable x:TypeArguments="x:String" Name="LastBank4" />
      <Variable x:TypeArguments="x:String" Name="LastBank5" />
      <Variable x:TypeArguments="s:String[]" Name="ToEmailsList" />
      <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,87" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;** Comienza el proceso de Extraccion Bancaria **&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,87" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Se cierra Google Chrome...&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1096,346" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,128" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Chrome" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,20" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Assign sap2010:Annotation.AnnotationText="Obtener el Path en el que se gauardasn los archivos descargados." DisplayName="Get DownloadPath" sap:VirtualizedContainerService.HintSize="1096,97" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[DownloadsPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)+"\Downloads"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,87" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Se limpian las carpetas ...&quot;]" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de descargas para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1096,338" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Directory.GetFiles(DownloadsPath, &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,169" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,77" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de Movimientos Bancarios para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1096,338" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="326,169" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="284,77" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[file.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se obtienen los Headers del archivo de Reporte del Bot. Para conforme se vaya corriendo el proceso añadir la informacion al reporte." DataTable="[ReporteConfigDT]" DisplayName="Read Bot Report DataTable" sap:VirtualizedContainerService.HintSize="1096,138" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="A1" SheetName="RegistroBot" WorkbookPath="ExcelDeConfiguracion\ConfigReporteBot.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Assign sap2010:Annotation.AnnotationText="La direccion en la cual se encuentra el archivo de Configuracion que contiene todas las cuentas." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ConfigExcelFile]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">ExcelDeConfiguracion\ExcelConfigCuentas.xlsx</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Se le asigna a una variable llamada &quot;ExcelSheetsList&quot; con el nombre de todas las empresas que se manejan en el proceso.&#xA;" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1096,274" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[ConfigExcelFile]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[ExcelSheetsList]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_16">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_31">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank2]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_32">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank3]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_54">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank4]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco al nombre del banco anterior, ya que no hay un anterior porque apenas se esta corriendo el bot." sap:VirtualizedContainerService.HintSize="1096,110" sap2010:WorkflowViewState.IdRef="Assign_107">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LastBank5]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1096,5979" sap2010:WorkflowViewState.IdRef="Sequence_73">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT" />
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT1" />
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT2" />
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT3" />
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT4" />
        <Variable x:TypeArguments="x:String" Name="sheet" />
        <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT5" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="1054,59" sap2010:WorkflowViewState.IdRef="Assign_106">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[sheet]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">LARCE</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1054,87" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Empieza el proceso de extraccion para la entidad: &quot;+ sheet.ToString]" />
      <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se lee toda la tabla de confirguracion que contiene toda la informacion necesaria para realizar el proceso completo a cada una de las cuentas del proceso." DataTable="[AccountsDT]" DisplayName="Read Accounts DataTable" sap:VirtualizedContainerService.HintSize="1054,138" sap2010:WorkflowViewState.IdRef="ReadRange_3" Range="A1" SheetName="[sheet.ToString]" WorkbookPath="[ConfigExcelFile]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que no tienen ningun valor en alguna de las columnas." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1054,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Link "]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Cuenta en SAP"]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Cuenta en el Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
              </ui:FilterOperationArgument.Column>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
      <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que tienen como valor &quot;NO&quot; en la columna &quot;Descargar&quot;." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1054,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["NO"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
      <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos1.xlsx">
        <ui:WriteCell.Text>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:WriteCell.Text>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteCell>
      <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos2.xlsx">
        <ui:WriteCell.Text>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:WriteCell.Text>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteCell>
      <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos3.xlsx">
        <ui:WriteCell.Text>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:WriteCell.Text>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteCell>
      <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos4.xlsx">
        <ui:WriteCell.Text>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:WriteCell.Text>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteCell>
      <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_11" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos5.xlsx">
        <ui:WriteCell.Text>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:WriteCell.Text>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteCell>
      <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 1" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[AccountsDT1]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BAC"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["DAVIVIENDA"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 2" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_10" OutputDataTable="[AccountsDT2]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BCT"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["SCOTIABANK"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 3" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_11" OutputDataTable="[AccountsDT3]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BCR"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 4" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[AccountsDT4]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["LAFISE"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["BN"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 4" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[AccountsDT5]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["IMPROBANK"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Parallel sap:VirtualizedContainerService.HintSize="1054,172" sap2010:WorkflowViewState.IdRef="Parallel_2">
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT1]" DisplayName="For Each Account 1" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body For Each Account 1" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_51">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                  <Variable x:TypeArguments="x:String" Name="Comentarios" />
                  <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                  <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                  <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                  <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_65">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_66">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank1)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_48">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_67">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_68">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank1]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_5" Url="[row(1).ToString]">
                        <ui:OpenBrowser.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_5" />
                            </Sequence>
                          </ActivityAction>
                        </ui:OpenBrowser.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:OpenBrowser>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_69">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[LastBank1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_56">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_55">
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_54">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_53">
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_52">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_51">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_50">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_49">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_70">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_57">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_49">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos1.xlsx</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_72">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">SI</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_73">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="5">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                        <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                      </Sequence>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
                <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_58">
                  <If.Then>
                    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_74">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBank1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[""]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT2]" DisplayName="For Each Account 2" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body For Each Account 2" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_57">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                  <Variable x:TypeArguments="x:String" Name="Comentarios" />
                  <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                  <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                  <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                  <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_75">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_76">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank2)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_59">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_77">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_78">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank2]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_6" Url="[row(1).ToString]">
                        <ui:OpenBrowser.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_52">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_6" />
                            </Sequence>
                          </ActivityAction>
                        </ui:OpenBrowser.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:OpenBrowser>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_79">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[LastBank2]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_67">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_66">
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_65">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_64">
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_63">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_62">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_61">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_60">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_68">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_55">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos2.xlsx</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_82">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">SI</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_83">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_6" NumberOfRetries="5">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                        <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
                      </Sequence>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
                <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_69">
                  <If.Then>
                    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_84">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBank2]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[""]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT3]" DisplayName="For Each Account 3" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body For Each Account 3" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_63">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                  <Variable x:TypeArguments="x:String" Name="Comentarios" />
                  <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                  <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                  <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                  <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_85">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_86">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank3)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_70">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_87">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_59">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_88">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank3]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_7" Url="[row(1).ToString]">
                        <ui:OpenBrowser.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_58">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_7" />
                            </Sequence>
                          </ActivityAction>
                        </ui:OpenBrowser.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:OpenBrowser>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_89">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[LastBank3]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_78">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_77">
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_73" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_76">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_74" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_75">
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_74">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_76" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_73">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_72">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_78" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_71">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_79" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_90">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_79">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_61">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_80" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos3.xlsx</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_92">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">SI</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_93">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_7" NumberOfRetries="5">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_62">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                        <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                      </Sequence>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
                <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_80">
                  <If.Then>
                    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_94">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBank3]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[""]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT4]" DisplayName="For Each Account 4" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body For Each Account 4" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_69">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                  <Variable x:TypeArguments="x:String" Name="Comentarios" />
                  <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                  <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                  <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                  <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_95">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_96">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank4)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_81">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_97">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_65">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_98">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_81" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank4]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_8" Url="[row(1).ToString]">
                        <ui:OpenBrowser.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_64">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_8" />
                            </Sequence>
                          </ActivityAction>
                        </ui:OpenBrowser.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:OpenBrowser>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_99">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[LastBank4]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_89">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_82" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_88">
                      <If.Then>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_83" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                      <If.Else>
                        <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_87">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_86">
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_85" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_85">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_86" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_84">
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_87" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_83">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_82">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_100">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_101">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_90">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_67">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos4.xlsx</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_102">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">SI</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_103">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_8" NumberOfRetries="5">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_68">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                        <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_8" />
                      </Sequence>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
                <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_91">
                  <If.Then>
                    <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_104">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LastBank4]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[""]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Parallel>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT5]" DisplayName="For Each Account 5" sap:VirtualizedContainerService.HintSize="1054,126" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body For Each Account 4" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_80">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                <Variable x:TypeArguments="x:String" Name="Comentarios" />
                <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_108">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_109">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank5)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_93">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_110">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_76">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_111">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank5]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_9" Url="[row(1).ToString]">
                      <ui:OpenBrowser.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_9" />
                          </Sequence>
                        </ActivityAction>
                      </ui:OpenBrowser.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:OpenBrowser>
                  </Sequence>
                </If.Else>
              </If>
              <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_112">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[LastBank5]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="3336,1505" sap2010:WorkflowViewState.IdRef="If_101">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_100">
                    <If.Then>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                    <If.Else>
                      <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_99">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </If.Then>
                        <If.Else>
                          <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_98">
                            <If.Then>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </If.Then>
                            <If.Else>
                              <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_97">
                                <If.Then>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </If.Then>
                                <If.Else>
                                  <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_96">
                                    <If.Then>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </If.Then>
                                    <If.Else>
                                      <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_95">
                                        <If.Then>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_94">
                                            <If.Then>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_113">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_114">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </If.Else>
                                  </If>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
              <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_102">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos5.xlsx</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_115">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">SI</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_116">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_9" NumberOfRetries="5">
                <ui:RetryScope.ActivityBody>
                  <ActivityAction>
                    <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_79">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AddDataRow>
                      <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_9" />
                    </Sequence>
                  </ActivityAction>
                </ui:RetryScope.ActivityBody>
                <ui:RetryScope.Condition>
                  <ActivityFunc x:TypeArguments="x:Boolean" />
                </ui:RetryScope.Condition>
              </ui:RetryScope>
              <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_103">
                <If.Then>
                  <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_117">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LastBank5]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[""]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_91" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank1]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank2]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank3]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_94" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank4]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_105" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank5]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del archivo de Movimientos Banancarios." sap:VirtualizedContainerService.HintSize="1054,97" sap2010:WorkflowViewState.IdRef="Assign_105">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["MovimientosBancarios_" + sheet.ToString.ToUpper + "_" + Date.Now.ToString("dd-MM-yyyy") + ".xlsx"]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1054,87" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Se consolida toda la informacion obtenida en un solo archivo...&quot;]" />
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de Movimientos Bancarios para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1054,1423" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="680,1261" sap2010:WorkflowViewState.IdRef="Sequence_72">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="638,1052" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" WorkbookPath="[file.ToString]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="604,943" sap2010:WorkflowViewState.IdRef="Sequence_71">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheets" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_3" Sheets="[ExcelSheets]" />
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,789" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[ExcelSheets]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,658" sap2010:WorkflowViewState.IdRef="Sequence_70">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="SheetContent" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap2010:Annotation.AnnotationText="Si el nombre de la hoja de excel es Sheet1, esta vacia." Condition="[sheet.ToString.Equals(&quot;Sheet1&quot;)]" sap:VirtualizedContainerService.HintSize="484,261" sap2010:WorkflowViewState.IdRef="If_92">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_4" />
                                </If.Then>
                              </If>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[SheetContent]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="A1" SheetName="[sheet.ToString]" />
                              <ui:WriteRange AddHeaders="False" sap2010:Annotation.AnnotationText="Se llena el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." DataTable="[SheetContent]" DisplayName="Write Excel Final" sap:VirtualizedContainerService.HintSize="484,166" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[sheet.ToString]" StartingCell="A1" WorkbookPath="[&quot;MovimientosBancarios\&quot; + MovimientosBancariosFile]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WriteRange>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="638,77" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[file.ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1096,49" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1174,5686" sap2010:WorkflowViewState.IdRef="Sequence_74">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada una de las empresas obtenidas se realiza lo siguiente:" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1132,5594" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ExcelSheetsList]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="sheet" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1096,5432" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT" />
                    <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT1" />
                    <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT2" />
                    <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT3" />
                    <Variable x:TypeArguments="sd:DataTable" Name="AccountsDT4" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1054,87" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Empieza el proceso de extraccion para la entidad: &quot;+ sheet.ToString]" />
                  <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Se lee toda la tabla de confirguracion que contiene toda la informacion necesaria para realizar el proceso completo a cada una de las cuentas del proceso." DataTable="[AccountsDT]" DisplayName="Read Accounts DataTable" sap:VirtualizedContainerService.HintSize="1054,138" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="A1" SheetName="[sheet.ToString]" WorkbookPath="[ConfigExcelFile]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ReadRange>
                  <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que no tienen ningun valor en alguna de las columnas." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1054,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
                        <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Link "]</InArgument>
                          </ui:FilterOperationArgument.Column>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Cuenta en SAP"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Cuenta en el Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="Or" Operator="EMPTY">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:FilterDataTable>
                  <ui:FilterDataTable sap2010:Annotation.AnnotationText="Se filtra las cuentas de los bancos para eliminar aquellas que tienen como valor &quot;NO&quot; en la columna &quot;Descargar&quot;." DataTable="[AccountsDT]" DisplayName="Filter the accounts" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1054,194" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[AccountsDT]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Descargar"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["NO"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:FilterDataTable>
                  <If sap2010:Annotation.AnnotationText="Si las cuentas obtenidas son iguales a 0 entonces se continua con la siguiente empresa o entidad." Condition="[AccountsDT.Rows.Count = 0]" sap:VirtualizedContainerService.HintSize="1054,268" sap2010:WorkflowViewState.IdRef="If_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                    </If.Then>
                  </If>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos1.xlsx">
                    <ui:WriteCell.Text>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:WriteCell.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos2.xlsx">
                    <ui:WriteCell.Text>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:WriteCell.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos3.xlsx">
                    <ui:WriteCell.Text>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:WriteCell.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="Se crea el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." Cell="A1" DisplayName="Create the New Excel" sap:VirtualizedContainerService.HintSize="1054,166" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Sheet1" WorkbookPath="MovimientosBancarios\Movimientos4.xlsx">
                    <ui:WriteCell.Text>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:WriteCell.Text>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                  <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 1" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[AccountsDT1]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["IMPROBANK"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["BAC"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 2" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[AccountsDT2]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["BCT"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["SCOTIABANK"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 3" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[AccountsDT3]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["BCR"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["DAVIVIENDA"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:FilterDataTable DataTable="[AccountsDT]" DisplayName="Filter Data Table 4" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1054,156" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[AccountsDT4]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["LAFISE"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Banco"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["BN"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <Parallel sap:VirtualizedContainerService.HintSize="1054,172" sap2010:WorkflowViewState.IdRef="Parallel_1">
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT1]" DisplayName="For Each Account 1" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body For Each Account 1" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                              <Variable x:TypeArguments="x:String" Name="Comentarios" />
                              <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                              <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                              <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                              <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank1)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_7">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank1]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[row(1).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LastBank1]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_8">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_7">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_6">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_5">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_4">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_3">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_2">
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_2">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_10">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos1.xlsx</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_9">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">SI</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean" />
                              </ui:RetryScope.Condition>
                            </ui:RetryScope>
                            <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_12">
                              <If.Then>
                                <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_19">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LastBank1]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT2]" DisplayName="For Each Account 2" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body For Each Account 2" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                              <Variable x:TypeArguments="x:String" Name="Comentarios" />
                              <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                              <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                              <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                              <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_33">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_34">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank2)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_35">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_36">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank2]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="[row(1).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_2" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LastBank2]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_20">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_19">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_18">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_17">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_16">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_15">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_14">
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos2.xlsx</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_40">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">SI</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_41">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="5">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean" />
                              </ui:RetryScope.Condition>
                            </ui:RetryScope>
                            <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_23">
                              <If.Then>
                                <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LastBank2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT3]" DisplayName="For Each Account 3" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body For Each Account 3" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                              <Variable x:TypeArguments="x:String" Name="Comentarios" />
                              <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                              <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                              <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                              <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_43">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_44">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank3)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_45">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_46">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank3]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_3" Url="[row(1).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_3" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_47">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LastBank3]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_32">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_31">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_30">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_29">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_28">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_27">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_26">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_25">
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_33">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos3.xlsx</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_50">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">SI</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_51">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="5">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean" />
                              </ui:RetryScope.Condition>
                            </ui:RetryScope>
                            <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_34">
                              <If.Then>
                                <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_52">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LastBank3]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Despues de pasar por los filtros, por cada una de las linea restantes de el Data Table de cuentas, se le realiza lo siguiente:" DataTable="[AccountsDT4]" DisplayName="For Each Account 4" sap:VirtualizedContainerService.HintSize="200,126" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body For Each Account 4" sap:VirtualizedContainerService.HintSize="858,3050" sap2010:WorkflowViewState.IdRef="Sequence_45">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="MovimientosObtenidos" />
                              <Variable x:TypeArguments="x:String" Name="Comentarios" />
                              <Variable x:TypeArguments="x:Boolean" Name="CheckChrome" />
                              <Variable x:TypeArguments="x:String" Name="SaldoDisponible" />
                              <Variable x:TypeArguments="sd:DataTable" Name="MovementsDT" />
                              <Variable x:TypeArguments="x:Boolean" Name="ShouldContinue" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena el Saldo Disponible de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_55">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SaldoDisponible]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <Assign sap2010:Annotation.AnnotationText="Se limpia la variable que almacena los movimientos de la cuenta." sap:VirtualizedContainerService.HintSize="816,97" sap2010:WorkflowViewState.IdRef="Assign_56">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[MovementsDT]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[Nothing]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el Banco anteriormente trabajado y el actual son iguales.&#xA;&#xA;SI si, entonces el bot asigna True a la variable que indica que ya esta la pagina del banco abierta.&#xA;&#xA;SI no se cierra la pagina actual y se abre la del nuevo banco." Condition="[row(0).ToString.Equals(LastBank4)]" sap:VirtualizedContainerService.HintSize="816,860" sap2010:WorkflowViewState.IdRef="If_36">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="509,630" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="467,59" sap2010:WorkflowViewState.IdRef="Assign_58">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[ShouldContinue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="467,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank4]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Se abre Google Chrome en la pagina del banco al cual pertenece la cuenta que se esta procesando." BrowserType="Chrome" DisplayName="Open Google Chrome" sap:VirtualizedContainerService.HintSize="467,251" sap2010:WorkflowViewState.IdRef="OpenBrowser_4" Url="[row(1).ToString]">
                                    <ui:OpenBrowser.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_4" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:OpenBrowser.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:OpenBrowser>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Assign sap2010:Annotation.AnnotationText="A la variable que almacena el nombre del banco anterior se le asigna el nombre del banco actual para cuando se este procesando la siguente cuenta." sap:VirtualizedContainerService.HintSize="816,123" sap2010:WorkflowViewState.IdRef="Assign_59">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[LastBank4]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <If sap2010:Annotation.AnnotationText="Se utiliza un Workflow distinto segun el banco al cual pertenezca la cuenta bancaria." Condition="[row(0).Equals(&quot;IMPROBANK&quot;)]" sap:VirtualizedContainerService.HintSize="816,100" sap2010:WorkflowViewState.IdRef="If_44">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Improbank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Improbank_Extraction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row(0).Equals(&quot;LAFISE&quot;)]" sap:VirtualizedContainerService.HintSize="2957,1321" sap2010:WorkflowViewState.IdRef="If_43">
                                  <If.Then>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LAFISE_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\LAFISE_Extraction.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row(0).Equals(&quot;BCR&quot;)]" sap:VirtualizedContainerService.HintSize="2578,1168" sap2010:WorkflowViewState.IdRef="If_42">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCR_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCR_Extraction.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Perfil">[sheet.ToString.ToUpper]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[row(0).Equals(&quot;BAC&quot;)]" sap:VirtualizedContainerService.HintSize="2199,1015" sap2010:WorkflowViewState.IdRef="If_41">
                                          <If.Then>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BAC_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BAC_Extraction.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[row(0).Equals(&quot;BN&quot;)]" sap:VirtualizedContainerService.HintSize="1820,862" sap2010:WorkflowViewState.IdRef="If_40">
                                              <If.Then>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BN_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BN_Extraction.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </If.Then>
                                              <If.Else>
                                                <If Condition="[row(0).Equals(&quot;BCT&quot;)]" sap:VirtualizedContainerService.HintSize="1441,709" sap2010:WorkflowViewState.IdRef="If_39">
                                                  <If.Then>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke BCT_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\BCT_Extraction.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                        <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </If.Then>
                                                  <If.Else>
                                                    <If Condition="[row(0).Equals(&quot;DAVIVIENDA&quot;)]" sap:VirtualizedContainerService.HintSize="1062,556" sap2010:WorkflowViewState.IdRef="If_38">
                                                      <If.Then>
                                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Davivienda_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Davivienda_Extraction.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                      </If.Then>
                                                      <If.Else>
                                                        <If Condition="[row(0).Equals(&quot;SCOTIABANK&quot;)]" sap:VirtualizedContainerService.HintSize="683,403" sap2010:WorkflowViewState.IdRef="If_37">
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Scotiabank_Extraction.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processes\Scotiabank_Extraction.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MovementsDT">[MovementsDT]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_SaldoDisponible">[SaldoDisponible]</OutArgument>
                                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldContinue">[ShouldContinue]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnBanco">[row(3).ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaFinal">[in_FechaFinal]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_FechaInicio">[in_FechaInicio]</InArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_MovimientosObtenidos">[MovimientosObtenidos]</OutArgument>
                                                                <OutArgument x:TypeArguments="x:String" x:Key="out_Comentarios">[Comentarios]</OutArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsPath">[DownloadsPath]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="If Scotiabank Else" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">NO</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_61">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["El Banco '"+row(0).ToString+"' no esta contemplado en el alcance del Bot."]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </If.Else>
                                                    </If>
                                                  </If.Else>
                                                </If>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                            <If sap2010:Annotation.AnnotationText="Se revisa si el saldo disponible obtenido y los movimientos no vienen vacios o nulos.&#xA;&#xA;SI si, se continua.&#xA;&#xA;SI NO, se agrega esta informacion al archivo de Excel que almacena los movimientos bancarios." Condition="[SaldoDisponible IS &quot;&quot; OR MovementsDT IS Nothing]" sap:VirtualizedContainerService.HintSize="816,757" sap2010:WorkflowViewState.IdRef="If_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,527" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Se agregan los movimientos bancarios al archivo de excel - &quot; + row(0).ToString]" />
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddDataTAbleToReport.xaml" sap:VirtualizedContainerService.HintSize="334,110" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\AddDataTAbleToReport.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_SaldoDisponible">[SaldoDisponible]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_MovementsDT">[MovementsDT]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_CuentaEnSAP">[row(2).ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_MovimientosBancariosFile">MovimientosBancarios\Movimientos4.xlsx</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_62">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[MovimientosObtenidos]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">SI</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Assign_63">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comentarios]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="816,384" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="5">
                              <ui:RetryScope.ActivityBody>
                                <ActivityAction>
                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="242,214" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Se añade al reporte la lìnea de la cuenta que se proceso." ArrayRow="[{sheet.ToString.ToUpper, row(0).ToString, &quot;'&quot;+row(2).ToString, &quot;'&quot;+row(3).ToString, MovimientosObtenidos, &quot;&quot;, Comentarios}]" DataTable="[ReporteConfigDT]" DisplayName="Add Report Row" sap:VirtualizedContainerService.HintSize="200,60" sap2010:WorkflowViewState.IdRef="AddDataRow_7">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddDataRow>
                                    <Delay DisplayName="Delay 1s" Duration="[TimeSpan.FromMilliseconds(1000)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:RetryScope.ActivityBody>
                              <ui:RetryScope.Condition>
                                <ActivityFunc x:TypeArguments="x:Boolean" />
                              </ui:RetryScope.Condition>
                            </ui:RetryScope>
                            <If Condition="[Comentarios.Equals(&quot;El encargado ingreso 'SALIR' en la ventana de pausa del bot.&quot;)]" sap:VirtualizedContainerService.HintSize="816,260" sap2010:WorkflowViewState.IdRef="If_46">
                              <If.Then>
                                <Assign sap2010:Annotation.AnnotationText="Se le asigna en blanco." sap:VirtualizedContainerService.HintSize="262,90" sap2010:WorkflowViewState.IdRef="Assign_64">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LastBank4]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                  </Parallel>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank1]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank2]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank3]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Se cierra sesion y Google Chrome si sigue abierta alguna pagina bancaria." DisplayName="Invoke LogoutCloseWebPage.xaml" sap:VirtualizedContainerService.HintSize="1054,148" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\LogoutCloseWebPage.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_BankName">[LastBank4]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del archivo de Movimientos Banancarios." sap:VirtualizedContainerService.HintSize="1054,97" sap2010:WorkflowViewState.IdRef="Assign_53">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[MovimientosBancariosFile]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["MovimientosBancarios_" + sheet.ToString.ToUpper + "_" + Date.Now.ToString("dd-MM-yyyy") + ".xlsx"]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1054,87" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Se consolida toda la informacion obtenida en un solo archivo...&quot;]" />
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Se limpia la carpeta de Movimientos Bancarios para evitar confuciones con archivos anteriores." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1054,1423" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="680,1261" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="638,1052" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="[file.ToString]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="604,943" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:List(x:String)" Name="ExcelSheets" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[ExcelSheets]" />
                                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,789" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[ExcelSheets]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,658" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="sd:DataTable" Name="SheetContent" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If sap2010:Annotation.AnnotationText="Si el nombre de la hoja de excel es Sheet1, esta vacia." Condition="[sheet.ToString.Equals(&quot;Sheet1&quot;)]" sap:VirtualizedContainerService.HintSize="484,261" sap2010:WorkflowViewState.IdRef="If_35">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                            </If.Then>
                                          </If>
                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[SheetContent]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1" SheetName="[sheet.ToString]" />
                                          <ui:WriteRange AddHeaders="False" sap2010:Annotation.AnnotationText="Se llena el excel que almacenara los movimientos de las diferentes cuentas en los diferentes bancos. Para cada una de las empresas del proceso." DataTable="[SheetContent]" DisplayName="Write Excel Final" sap:VirtualizedContainerService.HintSize="484,166" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[sheet.ToString]" StartingCell="A1" WorkbookPath="[&quot;MovimientosBancarios\&quot; + MovimientosBancariosFile]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:WriteRange>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                          <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="638,77" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[file.ToString]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="1096,88" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="ReportesExcel\" PathType="Folder" />
    <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="1096,247" sap2010:WorkflowViewState.IdRef="If_104">
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,77" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="ReportesExcel\" />
      </If.Then>
    </If>
    <Assign sap2010:Annotation.AnnotationText="Se obtiene el nombre del Excel Report." sap:VirtualizedContainerService.HintSize="1096,90" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_ReporteConfig]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["ReporteBot_" + Date.Now.ToString("dd_MM_yyyy_hh-mm-ss") + ".xlsx"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Se crea el Excel que contine el reporte de la ejecucion." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1096,350" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[&quot;ReportesExcel\&quot; + out_ReporteConfig]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,210" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="" DataTable="[ReporteConfigDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="RegistroBot" StartingCell="A1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1096,333" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,151" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[AttachmentsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[new string(Count){}]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[AttachmentsList(0)]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Path.GetFullPath("ReportesExcel/") + out_ReporteConfig]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Por cada uno de los archivos ubicados en 'MovimientosBancarios\ se agrega el archivo a la coleccion de adjuntos'" DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="1096,432" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(Path.GetFullPath(&quot;MovimientosBancarios/&quot;), &quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_29">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[AttachmentsList(Count)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[file.ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Se obtienen el correo del usuario al cual va ir el correo con los adjuntos finales del proceso de extraccion bancaria." AssetName="BotMovimientosBancarios_Output_ToEmail" DisplayName="Get To Email" FolderPath="Larce" sap:VirtualizedContainerService.HintSize="1096,171" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[toOutputEmail]</OutArgument>
      </ui:GetRobotAsset.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetRobotAsset>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_118">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[ToEmailsList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[split(toOutputEmail, ",")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1096,59" sap2010:WorkflowViewState.IdRef="Assign_119">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1096,381" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[ToEmailsList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="email" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,250" sap2010:WorkflowViewState.IdRef="Sequence_81">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_120">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ToEmailsList(Count)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[email.ToString.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_121">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="CredencialesGmail_Bot_Gsuite" DisplayName="Get Credential" FolderPath="Larce" sap:VirtualizedContainerService.HintSize="1096,77" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[ClientSecret]" Username="[clientID]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,87" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Se envia el correo con los movimientos y el reporte...&quot;]" />
    <uga:GSuiteApplicationScope Account="{x:Null}" ApiKey="{x:Null}" ContinueOnError="{x:Null}" CredentialSecret="{x:Null}" KeyPath="{x:Null}" Password="{x:Null}" ServiceAccountEmail="{x:Null}" TimeoutMS="{x:Null}" UserEmail="{x:Null}" sap2010:Annotation.AnnotationText="Sergio toda la configuración actual es para que los correos salgan por Drive@dilarece es cuestion de copiar y pegar" AuthenticationType="OAuthClientID" CredentialID="[clientID]" DataStoreLocation="Local disk" DisplayName="GSuite Application Scope" Folder="Larce" HasDomainWideAccesss="False" sap:VirtualizedContainerService.HintSize="1096,568" sap2010:WorkflowViewState.IdRef="GSuiteApplicationScope_1" KeyType="JSON" OAuthClient="UiPath" SecureCredentialSecret="[ClientSecret]" Services="Unselected">
      <uga:GSuiteApplicationScope.AuthenticationScopes>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
      </uga:GSuiteApplicationScope.AuthenticationScopes>
      <uga:GSuiteApplicationScope.Body>
        <ActivityAction x:TypeArguments="ug:SimpleObjectContainer">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ug:SimpleObjectContainer" Name="GSuiteScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,421" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:SendEmail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" AttachmentList="[AttachmentsList]" AuthScopesInvalid="False" Body="El bot ya obtuvo toda la informacion de las cuentas bancarias.&#xA;&#xA;Se adjuntan todos los archivos con los movimientos y el reporte del proceso." DisplayName="Send Mail Message" sap:VirtualizedContainerService.HintSize="334,329" sap2010:WorkflowViewState.IdRef="SendEmail_1" IsDraft="False" IsHTML="False" Subject="[&quot;Resultado Extracción Bot Conciliaciones Bancarias &quot;+DateTime.Now.ToString(&quot;d&quot;)]" To="[ToEmailsList]">
              <uga:SendEmail.Attachments>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </uga:SendEmail.Attachments>
            </uga:SendEmail>
          </Sequence>
        </ActivityAction>
      </uga:GSuiteApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uga:GSuiteApplicationScope>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,87" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;** Finaliza el proceso de Extraccion Bancaria **&quot;]" />
  </Sequence>
</Activity>